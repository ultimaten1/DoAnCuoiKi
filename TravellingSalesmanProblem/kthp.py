# Form implementation generated from reading ui file 'kthp.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import (
    QApplication,
    QMainWindow,
    QVBoxLayout,
    QWidget,
    QComboBox,
    QPushButton,
    QListWidget,
    QListWidgetItem,
)
import tkinter as tk, math
import sys, os

def resource_path(relative_path):
    base_path = getattr(sys, '_MEIPASS', os.path.dirname(os.path.abspath(__file__)))
    return os.path.join(base_path, relative_path)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(925, 478)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgba(0, 170, 127, 0.3);")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 20, 621, 431))
        self.label.setAutoFillBackground(False)
        self.label.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label.setText("")
        self.label.setTextFormat(QtCore.Qt.TextFormat.AutoText)
        self.label.setPixmap(QtGui.QPixmap(resource_path("img.png")))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.lstItem = QListWidget(parent=self.centralwidget)
        self.lstItem.setGeometry(QtCore.QRect(710, 70, 191, 191))
        self.lstItem.setStyleSheet(
            "background-color: rgba(0, 170, 127, 0.3);\n"
            'font: 75 12pt "MS Shell Dlg 2";\n'
            "color: rgb(255, 255, 255);\n"
            ""
        )
        self.lstItem.setObjectName("lstItem")
        self.btnThem = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnThem.clicked.connect(self.add_item_to_listview)
        self.btnThem.setGeometry(QtCore.QRect(850, 20, 51, 31))
        self.btnThem.setStyleSheet(
            "background-color: rgba(0, 170, 127, 0.3);\n"
            'font: 75 12pt "MS Shell Dlg 2";\n'
            "color: rgb(255, 255, 255);\n"
            ""
        )
        self.btnThem.setObjectName("btnThem")
        self.comboBox = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(710, 20, 131, 31))
        self.comboBox.setStyleSheet(
            "background-color: rgba(0, 170, 127, 0.3);\n"
            'font: 75 12pt "MS Shell Dlg 2";\n'
            "color: rgb(255, 255, 255);\n"
            ""
        )
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.btnTimDuongDi = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnTimDuongDi.setGeometry(QtCore.QRect(710, 280, 131, 31))
        self.btnTimDuongDi.setStyleSheet(
            "background-color: rgba(0, 170, 127, 0.3);\n"
            'font: 75 12pt "MS Shell Dlg 2";\n'
            "color: rgb(255, 255, 255);\n"
            ""
        )
        self.btnTimDuongDi.setObjectName("btnTimDuongDi")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(110, 70, 21, 16))
        self.label_3.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(210, 110, 40, 10))
        self.label_4.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(160, 70, 21, 16))
        self.label_5.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(290, 130, 35, 10))
        self.label_6.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(460, 280, 51, 16))
        self.label_7.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(530, 240, 35, 10))
        self.label_8.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(570, 170, 35, 10))
        self.label_9.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(490, 150, 35, 10))
        self.label_10.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(400, 90, 35, 10))
        self.label_11.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(330, 80, 41, 16))
        self.label_12.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(390, 150, 35, 10))
        self.label_13.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(400, 300, 35, 10))
        self.label_14.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(420, 220, 61, 16))
        self.label_15.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(340, 220, 51, 16))
        self.label_16.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(330, 280, 51, 16))
        self.label_17.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(320, 180, 51, 16))
        self.label_18.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(420, 380, 35, 10))
        self.label_19.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(280, 290, 35, 10))
        self.label_20.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_20.setObjectName("label_20")
        self.label_22 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(160, 170, 61, 16))
        self.label_22.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(80, 140, 21, 16))
        self.label_23.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(230, 200, 35, 10))
        self.label_24.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(80, 200, 51, 16))
        self.label_25.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 6pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(120, 170, 35, 10))
        self.label_26.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(30, 210, 35, 10))
        self.label_27.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_27.setObjectName("label_27")
        self.label_28 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_28.setGeometry(QtCore.QRect(120, 230, 51, 16))
        self.label_28.setStyleSheet(
            "\n"
            "color: rgb(0, 0, 127);\n"
            'font: 75 7pt "MS Shell Dlg 2";\n'
            "background-color: rgba(255, 255, 255,0);"
        )
        self.label_28.setObjectName("label_28")
        self.btnXoa = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnXoa.clicked.connect(self.dele_item_to_listview)
        self.btnXoa.setGeometry(QtCore.QRect(850, 280, 51, 31))
        self.btnXoa.setStyleSheet(
            "background-color: rgba(0, 170, 127, 0.3);\n"
            'font: 75 12pt "MS Shell Dlg 2";\n'
            "color: rgb(255, 255, 255);\n"
            ""
        )
        self.btnXoa.setObjectName("btnXoa")
        self.lstKetQua = QListWidget(parent=self.centralwidget)
        self.lstKetQua.setGeometry(QtCore.QRect(610, 330, 291, 111))
        self.lstKetQua.setStyleSheet(
            "background-color: rgba(0, 170, 127, 0.3);\n"
            'font: 75 12pt "MS Shell Dlg 2";\n'
            "color: rgb(255, 255, 255);\n"
            ""
        )
        self.lstKetQua.setObjectName("lstKetQua")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 925, 18))
        self.menubar.setObjectName("menubar")
        self.menuB_I_TO_N_NG_I_DU_L_CH_GI_I_THU_T_HILL_CLIMBING = QtWidgets.QMenu(
            parent=self.menubar
        )
        self.menuB_I_TO_N_NG_I_DU_L_CH_GI_I_THU_T_HILL_CLIMBING.setStyleSheet("")
        self.menuB_I_TO_N_NG_I_DU_L_CH_GI_I_THU_T_HILL_CLIMBING.setObjectName(
            "menuB_I_TO_N_NG_I_DU_L_CH_GI_I_THU_T_HILL_CLIMBING"
        )
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(
            self.menuB_I_TO_N_NG_I_DU_L_CH_GI_I_THU_T_HILL_CLIMBING.menuAction()
        )
        self.btnTimDuongDi.clicked.connect(self.hill_climbing)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(
            _translate("MainWindow", "Travelling Salesman Problem")
        )
        self.btnThem.setText(_translate("MainWindow", "Thêm"))
        self.comboBox.setItemText(0, _translate("MainWindow", ""))
        self.comboBox.setItemText(1, _translate("MainWindow", "Crimea"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Donetsk"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Luhansk"))
        self.comboBox.setItemText(4, _translate("MainWindow", "Kharkiv"))
        self.comboBox.setItemText(5, _translate("MainWindow", "Dnlpropetrovsk"))
        self.comboBox.setItemText(6, _translate("MainWindow", "Zaporizhia"))
        self.comboBox.setItemText(7, _translate("MainWindow", "Kherson"))
        self.comboBox.setItemText(8, _translate("MainWindow", "Odessa"))
        self.comboBox.setItemText(9, _translate("MainWindow", "Mykolaiv"))
        self.comboBox.setItemText(10, _translate("MainWindow", "Kirovohrad"))
        self.comboBox.setItemText(11, _translate("MainWindow", "Cherkasy"))
        self.comboBox.setItemText(12, _translate("MainWindow", "Poltava"))
        self.comboBox.setItemText(13, _translate("MainWindow", "Sumy"))
        self.comboBox.setItemText(14, _translate("MainWindow", "Kiev"))
        self.comboBox.setItemText(15, _translate("MainWindow", "Chernihiv"))
        self.comboBox.setItemText(16, _translate("MainWindow", "Zhytomyr"))
        self.comboBox.setItemText(17, _translate("MainWindow", "Vinnytaia"))
        self.comboBox.setItemText(18, _translate("MainWindow", "Chernivtai"))
        self.comboBox.setItemText(19, _translate("MainWindow", "Khmelnytakyi"))
        self.comboBox.setItemText(20, _translate("MainWindow", "Rivne"))
        self.comboBox.setItemText(21, _translate("MainWindow", "Ternopil"))
        self.comboBox.setItemText(22, _translate("MainWindow", "Ivano-Frankivak"))
        self.comboBox.setItemText(23, _translate("MainWindow", "Zakarpattia"))
        self.comboBox.setItemText(24, _translate("MainWindow", "Lviv"))
        self.comboBox.setItemText(25, _translate("MainWindow", "Volyn"))
        self.btnTimDuongDi.setText(_translate("MainWindow", "TÌM ĐƯỜNG ĐI"))
        self.label_3.setText(_translate("MainWindow", "Volyn"))
        self.label_3.mousePressEvent = self.add_label3_text_to_listview
        self.label_4.setText(_translate("MainWindow", "Zhytomyr"))
        self.label_4.mousePressEvent = self.add_label4_text_to_listview
        self.label_5.setText(_translate("MainWindow", "Rivne"))
        self.label_5.mousePressEvent = self.add_label5_text_to_listview
        self.label_6.setText(_translate("MainWindow", "Kiev"))
        self.label_6.mousePressEvent = self.add_label6_text_to_listview
        self.label_7.setText(_translate("MainWindow", "Zaporizhia"))
        self.label_7.mousePressEvent = self.add_label7_text_to_listview
        self.label_8.setText(_translate("MainWindow", "Donetsk"))
        self.label_8.mousePressEvent = self.add_label8_text_to_listview
        self.label_9.setText(_translate("MainWindow", "Luhansk"))
        self.label_9.mousePressEvent = self.add_label9_text_to_listview
        self.label_10.setText(_translate("MainWindow", "Kharkiv"))
        self.label_10.mousePressEvent = self.add_label10_text_to_listview
        self.label_11.setText(_translate("MainWindow", "Sumy"))
        self.label_11.mousePressEvent = self.add_label11_text_to_listview
        self.label_12.setText(_translate("MainWindow", "Chernihiv"))
        self.label_12.mousePressEvent = self.add_label12_text_to_listview
        self.label_13.setText(_translate("MainWindow", "Poltava"))
        self.label_13.mousePressEvent = self.add_label13_text_to_listview
        self.label_14.setText(_translate("MainWindow", "Kherson"))
        self.label_14.mousePressEvent = self.add_label14_text_to_listview
        self.label_15.setText(_translate("MainWindow", "Dnlpropetrovsk"))
        self.label_15.mousePressEvent = self.add_label15_text_to_listview
        self.label_16.setText(_translate("MainWindow", "Kirovohrad"))
        self.label_16.mousePressEvent = self.add_label16_text_to_listview
        self.label_17.setText(_translate("MainWindow", "Mykolaiv"))
        self.label_17.mousePressEvent = self.add_label17_text_to_listview
        self.label_18.setText(_translate("MainWindow", "Cherkasy"))
        self.label_18.mousePressEvent = self.add_label18_text_to_listview
        self.label_19.setText(_translate("MainWindow", "Crimea"))
        self.label_19.mousePressEvent = self.add_label19_text_to_listview
        self.label_20.setText(_translate("MainWindow", "Odessa"))
        self.label_20.mousePressEvent = self.add_label20_text_to_listview
        self.label_22.setText(_translate("MainWindow", "Khmelnytakyi"))
        self.label_22.mousePressEvent = self.add_label21_text_to_listview
        self.label_23.setText(_translate("MainWindow", "Lviv"))
        self.label_23.mousePressEvent = self.add_label22_text_to_listview
        self.label_24.setText(_translate("MainWindow", "Vinnytaia"))
        self.label_24.mousePressEvent = self.add_label23_text_to_listview
        self.label_25.setText(_translate("MainWindow", "Ivano-Frankivak"))
        self.label_25.mousePressEvent = self.add_label24_text_to_listview
        self.label_26.setText(_translate("MainWindow", "Ternopil"))
        self.label_26.mousePressEvent = self.add_label25_text_to_listview
        self.label_27.setText(_translate("MainWindow", "Zakarpattia"))
        self.label_27.mousePressEvent = self.add_label26_text_to_listview
        self.label_28.setText(_translate("MainWindow", "Chernivtai"))
        self.label_28.mousePressEvent = self.add_label27_text_to_listview
        # label_3 -> label_28: ten bien cua cac tinh
        self.btnXoa.setText(_translate("MainWindow", "Xóa"))
        self.menuB_I_TO_N_NG_I_DU_L_CH_GI_I_THU_T_HILL_CLIMBING.setTitle(
            _translate("MainWindow", "GIẢI THUẬT HILL CLIMBING")
        )

    def add_item_to_listview(self):
        selected_item = self.comboBox.currentText()

        item_exists = False

        for i in range(self.lstItem.count()):
            if selected_item == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists and selected_item != "":
            self.lstItem.addItem(selected_item)

    def dele_item_to_listview(self):
        selected_item = self.lstItem.currentIndex()
        if selected_item.isValid():
            self.lstItem.model().removeRow(selected_item.row())

    def add_label3_text_to_listview(self, event):
        label3_text = self.label_3.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label3_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label3_text)

    def add_label4_text_to_listview(self, event):
        label4_text = self.label_4.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label4_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label4_text)

    def add_label5_text_to_listview(self, event):
        label5_text = self.label_5.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label5_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label5_text)

    def add_label6_text_to_listview(self, event):
        label6_text = self.label_6.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label6_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label6_text)

    def add_label7_text_to_listview(self, event):
        label7_text = self.label_7.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label7_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label7_text)

    def add_label8_text_to_listview(self, event):
        label8_text = self.label_8.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label8_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label8_text)

    def add_label9_text_to_listview(self, event):
        label9_text = self.label_9.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label9_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label9_text)

    def add_label10_text_to_listview(self, event):
        label10_text = self.label_10.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label10_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label10_text)

    def add_label11_text_to_listview(self, event):
        label11_text = self.label_11.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label11_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label11_text)

    def add_label12_text_to_listview(self, event):
        label12_text = self.label_12.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label12_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label12_text)

    def add_label13_text_to_listview(self, event):
        label13_text = self.label_13.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label13_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label13_text)

    def add_label14_text_to_listview(self, event):
        label14_text = self.label_14.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label14_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label14_text)

    def add_label15_text_to_listview(self, event):
        label15_text = self.label_15.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label15_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label15_text)

    def add_label16_text_to_listview(self, event):
        label16_text = self.label_16.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label16_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label16_text)

    def add_label17_text_to_listview(self, event):
        label17_text = self.label_17.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label17_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label17_text)

    def add_label18_text_to_listview(self, event):
        label18_text = self.label_18.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label18_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label18_text)

    def add_label19_text_to_listview(self, event):
        label19_text = self.label_19.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label19_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label19_text)

    def add_label20_text_to_listview(self, event):
        label20_text = self.label_20.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label20_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label20_text)

    def add_label21_text_to_listview(self, event):
        label22_text = self.label_22.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label22_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label22_text)

    def add_label22_text_to_listview(self, event):
        label23_text = self.label_23.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label23_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label23_text)

    def add_label23_text_to_listview(self, event):
        label24_text = self.label_24.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label24_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label24_text)

    def add_label24_text_to_listview(self, event):
        label25_text = self.label_25.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label25_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label25_text)

    def add_label25_text_to_listview(self, event):
        label26_text = self.label_26.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label26_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label26_text)

    def add_label26_text_to_listview(self, event):
        label27_text = self.label_27.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label27_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label27_text)

    def add_label27_text_to_listview(self, event):
        label28_text = self.label_28.text()
        item_exists = False

        for i in range(self.lstItem.count()):
            if label28_text == self.lstItem.item(i).text():
                item_exists = True
                break

        if not item_exists:
            self.lstItem.addItem(label28_text)

    def hill_climbing(self):
        # Lấy danh sách các tỉnh từ lstItem
        items = [self.lstItem.item(i).text() for i in range(self.lstItem.count())]

        if len(items) <= 1:
            self.lstKetQua.clear()
            self.lstKetQua.addItem("Thêm ít nhất 2 tỉnh để tìm đường đi.")
            return

        # Đặt tỉnh xuất phát là tỉnh đầu tiên trong danh sách
        current_city = items[0]

        # Khởi tạo đường đi ban đầu với tỉnh xuất phát
        path = [current_city]
        items.remove(current_city)

        # Tìm đường đi bằng giải thuật Hill Climbing
        while items:
            min_distance = float("inf") # +∞
            next_city = None

            for city in items:
                # Tính khoảng cách từ tỉnh hiện tại đến tỉnh tiềm năng
                distance = self.calculate_distance(current_city, city)
                if distance < min_distance:
                    min_distance = distance
                    next_city = city

            # Thêm tỉnh tiềm năng vào đường đi và loại bỏ khỏi danh sách
            path.append(next_city)
            current_city = next_city
            items.remove(current_city)

        # Quay về tỉnh xuất phát để hoàn thành chu trình
        path.append(path[0])

        # Hiển thị đường đi và khoảng cách trên lstKetQua
        self.lstKetQua.clear()

        self.lstKetQua.addItem("Đường đi tối ưu:")
        self.lstKetQua.addItems(path)
        total_distance = round(sum(
            self.calculate_distance(path[i], path[i + 1]) for i in range(len(path) - 1)), 2
        )
        self.lstKetQua.addItem(f"Khoảng cách: {total_distance} km")

    def calculate_distance(self, city1, city2):
        # Tọa độ của các thành phố
        city_coordinates = {
            "Volyn": (110, 70),
            "Zhytomyr": (210, 100),
            "Rivne": (160, 70),
            "Kiev": (290, 130),
            "Zaporizhia": (460, 280),
            "Donetsk": (530, 240),
            "Luhansk": (570, 170),
            "Kharkiv": (490, 150),
            "Sumy": (400, 90),
            "Chernihiv": (330, 80),
            "Poltava": (390, 150),
            "Kherson": (400, 300),
            "Dnlpropetrovsk": (420, 220),
            "Kirovohrad": (340, 220),
            "Mykolaiv": (330, 280),
            "Cherkasy": (320, 180),
            "Crimea": (420, 380),
            "Odessa": (280, 290),
            "Khmelnytakyi": (160, 170),
            "Lviv": (80, 140),
            "Vinnytaia": (230, 200),
            "Ivano-Frankivak": (80, 200),
            "Ternopil": (120, 170),
            "Zakarpattia": (30, 210),
            "Chernivtai": (120, 230)
        }

        # Lấy tọa độ của từng thành phố
        x1, y1 = city_coordinates.get(city1, (0, 0))
        x2, y2 = city_coordinates.get(city2, (0, 0))

        # Tính khoảng cách Euclidean distance
        distance = round(math.sqrt((x1 - x2)**2 + (y1 - y2)**2), 2)
        
        return distance


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
